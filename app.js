// –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
let appState = {
    currentScreen: 'welcome',
    currentQuestion: 0,
    userAnswers: [],
    score: 0,
    startTime: null,
    endTime: null
};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è VK Bridge
    if (typeof vkBridge !== 'undefined') {
        vkBridge.send('VKWebAppInit');
    }
    
    showScreen('welcome');
});

// –ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–æ–≤
function showScreen(screenName) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
    document.querySelectorAll('.screen').forEach(screen => {
        screen.classList.remove('active');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
    document.getElementById(screenName + '-screen').classList.add('active');
    appState.currentScreen = screenName;
}

// –ù–∞—á–∞–ª–æ —Ç–µ—Å—Ç–∞
function startTest() {
    appState.currentQuestion = 0;
    appState.userAnswers = [];
    appState.score = 0;
    appState.startTime = new Date();
    
    showScreen('test');
    displayQuestion();
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
function displayQuestion() {
    const question = testQuestions[appState.currentQuestion];
    const progress = ((appState.currentQuestion) / testQuestions.length) * 100;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    document.getElementById('progress-fill').style.width = progress + '%';
    document.getElementById('progress-text').textContent = 
        `${appState.currentQuestion + 1}/${testQuestions.length}`;
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤–æ–ø—Ä–æ—Å
    document.getElementById('question-text').textContent = question.question;
    
    // –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
    const answersContainer = document.getElementById('answers-container');
    answersContainer.innerHTML = '';
    
    question.answers.forEach((answer, index) => {
        const answerElement = document.createElement('div');
        answerElement.className = 'answer-option';
        answerElement.innerHTML = `
            <div class="answer-text">${answer}</div>
        `;
        
        answerElement.addEventListener('click', () => selectAnswer(index));
        answersContainer.appendChild(answerElement);
    });
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–î–∞–ª–µ–µ"
    document.getElementById('next-button').disabled = true;
}

// –í—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞
function selectAnswer(answerIndex) {
    const question = testQuestions[appState.currentQuestion];
    const answerOptions = document.querySelectorAll('.answer-option');
    
    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –≤—ã–±–æ—Ä—ã
    answerOptions.forEach(option => {
        option.classList.remove('selected');
    });
    
    // –û—Ç–º–µ—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
    answerOptions[answerIndex].classList.add('selected');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    appState.userAnswers[appState.currentQuestion] = [answerIndex];
    
    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–î–∞–ª–µ–µ"
    document.getElementById('next-button').disabled = false;
}

// –°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å
function nextQuestion() {
    appState.currentQuestion++;
    
    if (appState.currentQuestion < testQuestions.length) {
        displayQuestion();
    } else {
        finishTest();
    }
}

// –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞
function finishTest() {
    appState.endTime = new Date();
    calculateScore();
    showResults();
}

// –†–∞—Å—á–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function calculateScore() {
    appState.score = 0;
    
    testQuestions.forEach((question, index) => {
        const userAnswer = appState.userAnswers[index];
        
        if (!userAnswer) return;
        
        if (question.type === 'single') {
            if (userAnswer[0] === question.correct) {
                appState.score++;
            }
        } else if (question.type === 'multiple') {
            // –î–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
            const userSorted = [...userAnswer].sort().join('');
            const correctSorted = [...question.correct].sort().join('');
            
            if (userSorted === correctSorted) {
                appState.score++;
            }
        }
    });
}

// –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function showResults() {
    const totalQuestions = testQuestions.length;
    const correctAnswers = appState.score;
    const percentage = Math.round((correctAnswers / totalQuestions) * 100);
    const timeSpent = Math.round((appState.endTime - appState.startTime) / 1000 / 60);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    document.getElementById('score-percent').textContent = percentage + '%';
    document.getElementById('correct-answers').textContent = correctAnswers;
    document.getElementById('total-questions').textContent = totalQuestions;
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫—Ä—É–≥–∞
    const scoreCircle = document.getElementById('score-circle');
    scoreCircle.style.setProperty('--progress', percentage + '%');
    
    // –¢–µ–∫—Å—Ç–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const resultText = document.getElementById('result-text');
    let message = '';
    
    if (percentage >= 90) {
        message = '–û—Ç–ª–∏—á–Ω–æ! –í—ã –Ω–∞—Å—Ç–æ—è—â–∏–π —ç–∫—Å–ø–µ—Ä—Ç –≤ –∞—Ä—Ç-—Ñ–µ—Ö—Ç–æ–≤–∞–Ω–∏–∏! üèÜ';
    } else if (percentage >= 70) {
        message = '–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! –í—ã —Ö–æ—Ä–æ—à–æ –∑–Ω–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª–∞. üëç';
    } else if (percentage >= 50) {
        message = '–ù–µ–ø–ª–æ—Ö–æ, –Ω–æ –µ—Å—Ç—å —á—Ç–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å. üìö';
    } else {
        message = '–í–∞–º —Å—Ç–æ–∏—Ç –∏–∑—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ. üí™';
    }
    
    resultText.textContent = message;
    
    showScreen('result');
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ VK Bridge
    saveResult(percentage);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
function saveResult(percentage) {
    if (typeof vkBridge !== 'undefined') {
        vkBridge.send('VKWebAppStorageSet', {
            key: 'last_test_score',
            value: percentage.toString()
        }).catch(error => {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', error);
        });
    }
}

// –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
function shareResult() {
    const percentage = Math.round((appState.score / testQuestions.length) * 100);
    
    if (typeof vkBridge !== 'undefined') {
        vkBridge.send('VKWebAppShowWallPostBox', {
            message: `–Ø –ø—Ä–æ—à–µ–ª —Ç–µ—Å—Ç –ø–æ –∞—Ä—Ç-—Ñ–µ—Ö—Ç–æ–≤–∞–Ω–∏—é –∏ –Ω–∞–±—Ä–∞–ª ${percentage}%! –ü—Ä–æ–≤–µ—Ä—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è —Ç–æ–∂–µ!`
        }).catch(error => {
            alert('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º: ' + percentage + '% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤!');
        });
    } else {
        alert(`–ú–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: ${percentage}% –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤!`);
    }
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
function restartTest() {
    showScreen('welcome');
}